- gestionar login de manera segura (hashing contraseñas y jsonwebtoken):
npm install bcrypt jsonwebtoken dotenv
- instalar node:
sudo apt install nodejs
- generar clave aleatoria con node para el cifrado de contraseñas: -> JWT_SECRET en .env
node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"

PRUEBA register
- direccion web:
http://localhost:8080/autorizacion/register
- formato prueba:
{
    "nombre_usuario":"prueba",
    "contrasena":"prueba",
    "correo":"prueba@gmail.com"
}
(probado también si el correo o el nombre_usuario ya existen -> da fallo de POST -> está bien)

PRUEBA login
- direccion web:
http://localhost:8080/autorizacion/login
- formato prueba: (Body -> raw -> JSON)
{
    "nombre_usuario": "prueba",
    "contrasena": "prueba"
}
- respuesta obtenida:
{
    "message": "Login exitoso",
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJub21icmVfdXN1YXJpbyI6InBydWViYSIsImlhdCI6MTc0MDMxNzk3NCwiZXhwIjoxNzQwMzIxNTc0fQ.z_EjDXV8gFOXE96gFLEubYMeTcO0iftSyIy0cEotfPQ",
    "usuario": {
        "nombre_usuario": "prueba",
        "correo": "prueba@gmail.com"
    }
}
(el token obtenido se caduca pasado 1h -> si cierras y abres el servidor el token se mantiene)

PRUEBA perfil
- direccion web:
http://localhost:8080/usuario/perfil
- formato prueba: (Headers)
Key             Value (Bearer es porque es un token de autorización)
Authorization   Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJub21icmVfdXN1YXJpbyI6InBydWViYSIsImlhdCI6MTc0MDMxNzk3NCwiZXhwIjoxNzQwMzIxNTc0fQ.z_EjDXV8gFOXE96gFLEubYMeTcO0iftSyIy0cEotfPQ
- respuesta obtenida:
{
    "nombre_usuario": "prueba",
    "contrasena": "$2b$10$lObk.tA61cbJlttAFVC3FeouAzIgppLugOImf0.dB5drpNXOTF1C.",
    "correo": "prueba@gmail.com",
    "link_compartir": "",
    "es_admin": 0
}




PRUEBA change-password-request( PUT)
http://localhost:8080/change-password-request
- formato prueba
{
    "correo": "prueba@gmail.com"
}
- respuesta obtenida (por el momento, luego la respuesta llegará al correo)
{
    "message": "Solicitud de cambio de contraseña exitosa",
    "token":  	"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJub21icmVfdXN1YXJpbyI6InBydWViYSIsImlhdCI6MTc0MDY2MzUzMiwiZXhwIjoxNzQwNjY0NDMyfQ.0R1qWG3ejbs4uZy7RklXRe6ADmZFDS2uBLvAOTiMFdY"
}

PRUEBA change-password (PATCH)
- direccion web:
http://localhost:8080/change-password
- formato prueba:
{
    "token": "token"
    "nueva_contrasena": "nueva_contrasena" // La nueva contraseña que deseas establecer
}

- respuesta obtenida:
{
    "message": "Contraseña cambiada correctamente"
}

PRUEBA getArtist (GET)
- direccion web:
http://localhost:8080/artist?nombre_artista=Duki
- formato prueba:
nada
- respuesta obtenida:
{
    "nombre_artista": "Duki",
    "biografia": "Mauro Ezequiel Lombardo Quiroga, conocido artísticamente como Duki, es un rapero y cantante argentino que ha sido pionero en la escena del trap en su país.",
    "link_imagen": "https://drive.google.com/file/d/1jlbl2i-LYVq_CDyG0GY-_D1hcjlg-DUt/view?usp=drive_link",
    "albumes": [
        {
            "id_album": 9,
            "nombre_album": "Desde el fin del mundo",
            "link_imagen": "https://example.com/img/desde_el_fin_del_mundo.jpg"
        }
    ],
    "canciones": [
        {
            "id_cancion": 22,
            "titulo": "Party en el Barrio",
            "n_repros": 150000000,
            "link_img": "https://example.com/img/party_en_el_barrio.jpg",
            "duracion": "00:03:50",
            "fecha_pub": "2022-09-14",
            "nombre_artista": "Paulo Londra",
            "artistas_feat": "Duki"
        },
        {
            "id_cancion": 17,
            "titulo": "Malbec",
            "n_repros": 250000000,
            "link_img": "https://example.com/img/malbec.jpg",
            "duracion": "00:03:45",
            "fecha_pub": "2021-04-22",
            "nombre_artista": "Duki",
            "artistas_feat": ""
        },
        {
            "id_cancion": 4,
            "titulo": "Rockstar",
            "n_repros": 1100000,
            "link_img": "https://example.com/img/rockstar.jpg",
            "duracion": "00:03:20",
            "fecha_pub": "2019-11-22",
            "nombre_artista": "Duki",
            "artistas_feat": ""
        },
        {
            "id_cancion": 20,
            "titulo": "Goteo",
            "n_repros": 200000000,
            "link_img": "https://example.com/img/goteo.jpg",
            "duracion": "00:03:10",
            "fecha_pub": "2019-08-06",
            "nombre_artista": "Duki",
            "artistas_feat": ""
        }
    ]
}


PRUEBA getLists (GET)
- direccion web:
http://localhost:8080/get-lists
- formato prueba:
{
    "nombre_usuario": "prueba"
}

- respuesta obtenida:
{
    "listas": [
        {
            "id_lista": 1,
            "nombre": "lista de prueba"
        }
    ],
    "carpetas": "No hay carpetas",
    "artistas_favoritos": ["Artista A", "Artista B"],
    "podcasts_favoritos": "No hay podcasts favoritos"
}

PRUEBA createList (POST)
- direccion web:
http://localhost:8080/create-list
- formato prueba:
{
    "nombre_lista": "lista de prueba",
    "nombre_usuario": "prueba"
}
- respuesta obtenida:
{
    "message": "Lista creada correctamente"
}


PRUEBA playSong (GET)
- direccion web:
http://localhost:8080/play-song?id_cancion=2
-formato prueba:
nada
-respuesta obtenida:
{
    "link_cm": "https://res.cloudinary.com/djsm3jfht/video/upload/v1740773911/velda_ta5ap7.mp3",
    "titulo": "VeLDÁ",
    "duracion": "00:00:33",
    "link_imagen": "https://res.cloudinary.com/djsm3jfht/image/upload/v1740768017/DTMF_pq1pgl.jpg",
    "autor": "Bad Bunny",
    "artistas_featuring": "Dei V, Omar Courtz"
}

PRUEBA add-song-playlist (POST)
- direccion web:
http://localhost:8080/add-song-playlist
-formato prueba:
{
    "id_cancion": "2",
    "id_playlist": "2"
}

-respuesta obtenida:
{
    "message": "Canción añadida correctamente"
}